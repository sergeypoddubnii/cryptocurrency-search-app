{"version":3,"sources":["services/api.js","redux/mainCryptocurrency/mainCryptoTypes.js","redux/mainCryptocurrency/mainCryptoActions.js","helpers/mapDataCrypto.js","services/toastSettings.js","redux/mainCryptocurrency/mainCryptoOperations.js","redux/mainCryptocurrency/mainCryptoSelectors.js","redux/favCryptocurrency/favCryptoSelectors.js","redux/favCryptocurrency/favCyptoTypes.js","redux/favCryptocurrency/favCryptoActions.js","hoc/withWrapperListItem.js","components/MainListItem/MainListItem.js","hoc/withTitleList.js","components/MainList/MainList.js","components/FavoriteListItem/FavoriteListItem.js","components/FavoriteList/FavoriteList.js","components/Form/Form.js","components/Header/Header.js","redux/preloader/preloaderSelectors.js","components/Preloader/Preloader.js","App.js","redux/mainCryptocurrency/mainCryptoReducer.js","redux/favCryptocurrency/favCryptoReducer.js","redux/preloader/preloaderReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["basic","key","proxyUrl","url","axios","headers","mainCryptoTypes","GET_ALL_CRYPTOCURRENCY_START","GET_ALL_CRYPTOCURRENCY_SUCCESS","GET_ALL_CRYPTOCURRENCY_ERROR","FIND_CRYPTOCURRENCY","SORT_DESCENDING_PRICE","SORT_ASCENDING_PRICE","getAllCryptoCurrencyStart","type","getAllCryptoCurrencySuccess","cryptocurrencies","payload","getAllCryptoCurrencyError","findCrypto","value","sortAscendingPrice","sortDescendingPrice","mapDataCrypto","dataCrypto","map","crypto","id","name","symbol","price","quote","USD","toFixed","toastSetting","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","dispatch","mainCryptoActions","api","then","data","mapedData","catch","toast","error","state","mainCryptocurrencies","favCryptocurrencies","favCyptoTypes","ADD_TO_FAVORITE","REMOVE_FROM_FAVORITE","Li","styled","li","Title","h2","withWrapperListItem","Component","props","Button","button","isFavorite","useDispatch","onClick","favCryptoActions","warn","title","icon","faPlus","Container","div","withTitleList","options","useEffect","mainCryptoOperations","allCryptoCurrencies","useSelector","mainCryptoSelectors","favCryptoSelectors","cryptocurrenciesList","useMemo","length","find","favCrypto","faTrashAlt","Input","input","Form","form","SearchForm","useState","setValue","onSubmit","e","preventDefault","mainCryptoAction","toLowerCase","trim","onChange","target","placeholder","disabled","faSearch","HeaderContainer","header","Header","isLoading","Overlay","LoaderContainer","Preloader","preloaderSelectors","color","height","width","App","mainCryptoReducer","findedCrypto","ascendingPriceState","sort","a","b","descendingPriceState","favCryptoReducer","favCryptoTypes","filter","preloaderReducer","combineReducers","moviesPersistConfig","storage","whitelist","persistedReducer","persistReducer","rootReducer","middleware","thunk","enhuncer","composeWithDevTools","applyMiddleware","store","createStore","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd1c176e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst basic = 'https://pro-api.coinmarketcap.com';\r\nconst key = '8a4197ac-656d-49d5-8273-b703b20cf873';\r\nconst proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\nconst url = `${proxyUrl}${basic}/v1/cryptocurrency/listings/latest`;\r\nconst urlTest = `${proxyUrl}${basic}/v1/cryptocurrency/listings/latest?CMC_PRO_API_KEY=${key}`;\r\n\r\nconst getAllCryptocurrentsAxios = () => {\r\n  return axios(url, {\r\n    headers: {\r\n      'X-CMC_PRO_API_KEY': key,\r\n    },\r\n  });\r\n};\r\n\r\nexport default { getAllCryptocurrentsAxios, urlTest };\r\n","const mainCryptoTypes = {\r\n  GET_ALL_CRYPTOCURRENCY_START: 'GET_ALL_CRYPTOCURRENCY_START',\r\n  GET_ALL_CRYPTOCURRENCY_SUCCESS: 'GET_ALL_CRYPTOCURRENCY_SUCCESS',\r\n  GET_ALL_CRYPTOCURRENCY_ERROR: 'GET_ALL_CRYPTOCURRENCY_ERROR',\r\n  FIND_CRYPTOCURRENCY: 'FIND_CRYPTOCURRENCY',\r\n  SORT_DESCENDING_PRICE: 'SORT_DESCENDING_PRICE',\r\n  SORT_ASCENDING_PRICE: 'SORT_ASCENDING_PRICE',\r\n};\r\nexport default mainCryptoTypes;\r\n","import mainCryptoTypes from './mainCryptoTypes';\r\n\r\nconst getAllCryptoCurrencyStart = {\r\n  type: mainCryptoTypes.GET_ALL_CRYPTOCURRENCY_START,\r\n};\r\n\r\nconst getAllCryptoCurrencySuccess = cryptocurrencies => {\r\n  return {\r\n    type: mainCryptoTypes.GET_ALL_CRYPTOCURRENCY_SUCCESS,\r\n    payload: { cryptocurrencies },\r\n  };\r\n};\r\n\r\nconst getAllCryptoCurrencyError = {\r\n  type: mainCryptoTypes.GET_ALL_CRYPTOCURRENCY_ERROR,\r\n};\r\n\r\nconst findCrypto = value => {\r\n  return {\r\n    type: mainCryptoTypes.FIND_CRYPTOCURRENCY,\r\n    payload: { value },\r\n  };\r\n};\r\n\r\nconst sortAscendingPrice = {\r\n  type: mainCryptoTypes.SORT_ASCENDING_PRICE,\r\n};\r\n\r\nconst sortDescendingPrice = {\r\n  type: mainCryptoTypes.SORT_DESCENDING_PRICE,\r\n};\r\n\r\nexport default {\r\n  getAllCryptoCurrencyStart,\r\n  getAllCryptoCurrencySuccess,\r\n  getAllCryptoCurrencyError,\r\n  findCrypto,\r\n  sortAscendingPrice,\r\n  sortDescendingPrice,\r\n};\r\n","const mapDataCrypto = dataCrypto => {\r\n  return dataCrypto.map(crypto => {\r\n    return {\r\n      id: crypto.id,\r\n      name: crypto.name,\r\n      symbol: crypto.symbol,\r\n      price: crypto.quote.USD.price.toFixed(2),\r\n    };\r\n  });\r\n};\r\n\r\nexport default mapDataCrypto;\r\n","const toastSetting = {\r\n  position: 'top-center',\r\n  autoClose: 2000,\r\n  hideProgressBar: true,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n};\r\n\r\nexport default toastSetting;\r\n","import api from '../../services/api';\r\nimport mainCryptoActions from './mainCryptoActions';\r\nimport { toast } from 'react-toastify';\r\nimport mapDataCrypto from '../../helpers/mapDataCrypto';\r\nimport toastSetting from '../../services/toastSettings';\r\n\r\nconst getAllCryptoCurrenciesOperation = () => dispatch => {\r\n  dispatch(mainCryptoActions.getAllCryptoCurrencyStart);\r\n  return api\r\n    .getAllCryptocurrentsAxios()\r\n    .then(({ data }) => {\r\n      const mapedData = mapDataCrypto(data.data);\r\n      dispatch(mainCryptoActions.getAllCryptoCurrencySuccess(mapedData));\r\n    })\r\n    .catch(() => {\r\n      toast.error('HTTP request failed', toastSetting);\r\n      dispatch(mainCryptoActions.getAllCryptoCurrencyError);\r\n    });\r\n};\r\n\r\nexport default { getAllCryptoCurrenciesOperation };\r\n","const getAllCryptocurrencies = state => state.mainCryptocurrencies;\r\n\r\nexport default {\r\n  getAllCryptocurrencies,\r\n};\r\n","const getFavCryptocurrencies = state => state.favCryptocurrencies;\r\n\r\nexport default { getFavCryptocurrencies };\r\n","const favCyptoTypes = {\r\n  ADD_TO_FAVORITE: 'ADD_TO_FAVORITE',\r\n  REMOVE_FROM_FAVORITE: 'REMOVE_FROM_FAVORITE',\r\n};\r\nexport default favCyptoTypes;\r\n","import favCyptoTypes from './favCyptoTypes';\r\n\r\nconst addToFavorite = crypto => {\r\n  return {\r\n    type: favCyptoTypes.ADD_TO_FAVORITE,\r\n    payload: { crypto },\r\n  };\r\n};\r\n\r\nconst removeFromFavorite = id => {\r\n  return {\r\n    type: favCyptoTypes.REMOVE_FROM_FAVORITE,\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport default {\r\n  addToFavorite,\r\n  removeFromFavorite,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Li = styled.li`\r\n  list-style-type: none;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  border: 1px solid #d1d1d1;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 18px;\r\n  padding: 0;\r\n  margin: 0;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst withWrapperListItem = Component => props => {\r\n  const { name, symbol, price } = props;\r\n\r\n  return (\r\n    <Li>\r\n      <Title>\r\n        {name}\r\n        &nbsp;\r\n        {symbol}\r\n      </Title>\r\n      <div>\r\n        <span>{price}$</span>\r\n        <Component {...props} />\r\n      </div>\r\n    </Li>\r\n  );\r\n};\r\n\r\nexport default withWrapperListItem;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport favCryptoActions from '../../redux/favCryptocurrency/favCryptoActions';\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport withWrapperListItem from '../../hoc/withWrapperListItem';\r\nimport toastSetting from '../../services/toastSettings';\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  color: green;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  width: 18px;\r\n  padding: 0;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nconst MainListItem = ({ name, symbol, price, id, isFavorite }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const addToFavoriteHandler = () => {\r\n    if (isFavorite) {\r\n      toast.warn(`${name} has already added to favorite`, toastSetting);\r\n      return;\r\n    }\r\n    const crypto = { name, symbol, price, id };\r\n    return dispatch(favCryptoActions.addToFavorite(crypto));\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={addToFavoriteHandler}\r\n      type=\"button\"\r\n      title=\"add to favorite list\"\r\n    >\r\n      <FontAwesomeIcon icon={faPlus} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default withWrapperListItem(MainListItem);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h2`\r\n  font-size: 22px;\r\n  padding: 0;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 500px;\r\n  text-align: center;\r\n`;\r\n\r\nconst withTitleList = options => Component => props => {\r\n  const { title } = options;\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <Component {...props} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTitleList;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport mainCryptoOperations from '../../redux/mainCryptocurrency/mainCryptoOperations';\r\nimport mainCryptoSelectors from '../../redux/mainCryptocurrency/mainCryptoSelectors';\r\nimport favCryptoSelectors from '../../redux/favCryptocurrency/favCryptoSelectors';\r\nimport MainListItem from '../MainListItem/MainListItem';\r\nimport withTitleList from '../../hoc/withTitleList';\r\n\r\nconst hocOptions = { title: 'Top cryptorurrencies:' };\r\n\r\nconst MainList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(mainCryptoOperations.getAllCryptoCurrenciesOperation());\r\n  }, [dispatch]);\r\n\r\n  const allCryptoCurrencies = useSelector(\r\n    mainCryptoSelectors.getAllCryptocurrencies,\r\n  );\r\n\r\n  const favCryptocurrencies = useSelector(\r\n    favCryptoSelectors.getFavCryptocurrencies,\r\n  );\r\n\r\n  const cryptocurrenciesList = useMemo(() => {\r\n    return (\r\n      allCryptoCurrencies.length !== 0 &&\r\n      allCryptoCurrencies.map(crypto => {\r\n        const isFavorite = !!favCryptocurrencies.find(\r\n          favCrypto => favCrypto.id === crypto.id,\r\n        );\r\n        return (\r\n          <MainListItem\r\n            key={crypto.id}\r\n            name={crypto.name}\r\n            symbol={crypto.symbol}\r\n            price={crypto.price}\r\n            id={crypto.id}\r\n            isFavorite={isFavorite}\r\n          />\r\n        );\r\n      })\r\n    );\r\n  }, [allCryptoCurrencies, favCryptocurrencies]);\r\n\r\n  return (\r\n    <ul>\r\n      {allCryptoCurrencies.length !== 0\r\n        ? cryptocurrenciesList\r\n        : 'no results...'}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withTitleList(hocOptions)(MainList);\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport favCryptoActions from '../../redux/favCryptocurrency/favCryptoActions';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport withWrapperListItem from '../../hoc/withWrapperListItem';\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  color: red;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  width: 18px;\r\n  padding: 0;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nconst FavoriteListItem = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromFavoriteHandler = () =>\r\n    dispatch(favCryptoActions.removeFromFavorite(id));\r\n\r\n  return (\r\n    <Button\r\n      onClick={removeFromFavoriteHandler}\r\n      type=\"button\"\r\n      title=\"remove from favorite list\"\r\n    >\r\n      <FontAwesomeIcon icon={faTrashAlt} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default withWrapperListItem(FavoriteListItem);\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport favCryptoSelectors from '../../redux/favCryptocurrency/favCryptoSelectors';\r\nimport FavoriteListItem from '../FavoriteListItem/FavoriteListItem';\r\nimport withTitleList from '../../hoc/withTitleList';\r\n\r\nconst hocOptions = { title: 'Your favorite cryptoсurrencies:' };\r\n\r\nconst FavoriteList = () => {\r\n  const favCryptocurrencies = useSelector(\r\n    favCryptoSelectors.getFavCryptocurrencies,\r\n  );\r\n\r\n  const cryptocurrenciesList = useMemo(() => {\r\n    return favCryptocurrencies.map(crypto => {\r\n      return (\r\n        <FavoriteListItem\r\n          key={crypto.id}\r\n          name={crypto.name}\r\n          symbol={crypto.symbol}\r\n          price={crypto.price}\r\n          id={crypto.id}\r\n        />\r\n      );\r\n    });\r\n  }, [favCryptocurrencies]);\r\n\r\n  return <ul>{cryptocurrenciesList}</ul>;\r\n};\r\n\r\nexport default withTitleList(hocOptions)(FavoriteList);\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport mainCryptoAction from '../../redux/mainCryptocurrency/mainCryptoActions';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Input = styled.input`\r\n  font-size: 18px;\r\n  background: transparent;\r\n  border: none;\r\n  border-bottom: 1px solid #fff;\r\n  color: #657b9a;\r\n  outline: none;\r\n  ::placeholder {\r\n    font-size: 16px;\r\n    color: #fff;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 18px;\r\n  background: transparent;\r\n  border: none;\r\n  color: #fff;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-right: 40px;\r\n`;\r\n\r\nconst SearchForm = () => {\r\n  const [value, setValue] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(mainCryptoAction.findCrypto(value.toLowerCase().trim()));\r\n    setValue('');\r\n  };\r\n\r\n  const handlerChange = e => {\r\n    return setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handlerSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        value={value}\r\n        onChange={handlerChange}\r\n        placeholder=\"input name or symbol...\"\r\n      />\r\n      <Button type=\"submit\" disabled={value.length === 0}>\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport Form from '../Form/Form';\r\nimport mainCryptoActions from '../../redux/mainCryptocurrency/mainCryptoActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  color: #fff;\r\n  outline: none;\r\n  border: 0;\r\n  padding: 5px;\r\n  font-size: 16px;\r\n  margin-right: 40px;\r\n  border-bottom: 1px solid #fff;\r\n  :hover {\r\n    transform: translateY(-2px);\r\n    transition: all 0.2s ease;\r\n  }\r\n`;\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  padding: 20px 50px;\r\n  background-color: #7b25aa;\r\n`;\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerSortAscendingPrice = () => {\r\n    dispatch(mainCryptoActions.sortAscendingPrice);\r\n  };\r\n  const handlerSortDescendingPrice = () => {\r\n    dispatch(mainCryptoActions.sortDescendingPrice);\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <Form />\r\n      <Button type=\"button\" onClick={handlerSortAscendingPrice}>\r\n        sort ascending price &#8593;\r\n      </Button>\r\n      <Button type=\"button\" onClick={handlerSortDescendingPrice}>\r\n        sort descending price &#8595;\r\n      </Button>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const getIsLoading = state => state.isLoading;\r\n\r\nexport default {\r\n  getIsLoading,\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport styled from 'styled-components';\r\nimport preloaderSelectors from '../../redux/preloader/preloaderSelectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Overlay = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  z-index: 100;\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst Preloader = () => {\r\n  const isLoading = useSelector(preloaderSelectors.getIsLoading);\r\n  return isLoading ? (\r\n    <Overlay>\r\n      <LoaderContainer>\r\n        <Loader type=\"Puff\" color=\"#7b25aa\" height={80} width={80} />;\r\n      </LoaderContainer>\r\n    </Overlay>\r\n  ) : null;\r\n};\r\nexport default Preloader;\r\n","import React from 'react';\nimport MainList from './components/MainList/MainList';\nimport FavoriteList from './components/FavoriteList/FavoriteList';\nimport Header from './components/Header/Header';\nimport styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport Preloader from './components/Preloader/Preloader';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0 90px;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Container>\n        <MainList />\n        <FavoriteList />\n      </Container>\n      <ToastContainer />\n      <Preloader />\n    </>\n  );\n};\n\nexport default App;\n","import mainCryptoTypes from './mainCryptoTypes';\r\n\r\nconst mainCryptoReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case mainCryptoTypes.GET_ALL_CRYPTOCURRENCY_SUCCESS:\r\n      return payload.cryptocurrencies;\r\n\r\n    case mainCryptoTypes.FIND_CRYPTOCURRENCY:\r\n      const findedCrypto = state.find(\r\n        crypto =>\r\n          crypto.name.toLowerCase() === payload.value ||\r\n          crypto.symbol.toLowerCase() === payload.value,\r\n      );\r\n      return findedCrypto ? [findedCrypto] : [];\r\n\r\n    case mainCryptoTypes.SORT_ASCENDING_PRICE:\r\n      const ascendingPriceState = state.sort((a, b) => {\r\n        return a.price - b.price;\r\n      });\r\n      return [...ascendingPriceState];\r\n\r\n    case mainCryptoTypes.SORT_DESCENDING_PRICE:\r\n      const descendingPriceState = state.sort((a, b) => {\r\n        return b.price - a.price;\r\n      });\r\n      return [...descendingPriceState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mainCryptoReducer;\r\n","import favCryptoTypes from './favCyptoTypes';\r\n\r\nconst favCryptoReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case favCryptoTypes.ADD_TO_FAVORITE:\r\n      return [...state, payload.crypto];\r\n    case favCryptoTypes.REMOVE_FROM_FAVORITE:\r\n      return state.filter(crypto => crypto.id !== payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default favCryptoReducer;\r\n","import mainCryptoTypes from '../mainCryptocurrency/mainCryptoTypes';\r\n\r\nconst preloaderReducer = (state = false, { type }) => {\r\n  switch (type) {\r\n    case mainCryptoTypes.GET_ALL_CRYPTOCURRENCY_START:\r\n      return true;\r\n    case mainCryptoTypes.GET_ALL_CRYPTOCURRENCY_SUCCESS:\r\n    case mainCryptoTypes.GET_ALL_CRYPTOCURRENCY_ERROR:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default preloaderReducer;\r\n","import mainCryptoReducer from './mainCryptocurrency/mainCryptoReducer';\r\nimport favCryptoReducer from './favCryptocurrency/favCryptoReducer';\r\nimport preloaderReducer from './preloader/preloaderReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n  mainCryptocurrencies: mainCryptoReducer,\r\n  favCryptocurrencies: favCryptoReducer,\r\n  isLoading: preloaderReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst moviesPersistConfig = {\r\n  key: 'favCryptocurrencies',\r\n  storage,\r\n  whitelist: ['favCryptocurrencies'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(moviesPersistConfig, rootReducer);\r\n\r\nconst middleware = [thunk];\r\nconst enhuncer = composeWithDevTools(applyMiddleware(...middleware));\r\n\r\nexport const store = createStore(persistedReducer, enhuncer);\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}